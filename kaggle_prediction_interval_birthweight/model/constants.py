import numpy as np

VARIABLE_TYPE = {
    "ATTEND": "categorical",
    "BFACIL": "categorical",
    "BMI": "continuous",
    "CIG_0": "integer",
    "DLMP_MM": "integer (cyclic)",
    "DMAR": "categorical",
    "DOB_MM": "integer (cyclic)",
    "DOB_TT": "timestamp (cyclic)",
    "DOB_WK": "integer (cyclic)",
    "FAGECOMB": "integer",
    "FEDUC": "categorical (ordinal)",
    "ILLB_R": "integer",
    "ILOP_R": "integer",
    "ILP_R": "integer",
    "LD_INDL": "categorical",
    "MAGER": "integer",
    "MBSTATE_REC": "categorical",
    "MEDUC": "categorical (ordinal)",
    "M_Ht_In": "integer",
    "NO_INFEC": "categorical",
    "NO_MMORB": "categorical",
    "NO_RISKS": "categorical",
    "PAY": "categorical",
    "PAY_REC": "categorical",
    "PRECARE": "integer",
    "PREVIS": "integer",
    "PRIORDEAD": "integer",
    "PRIORLIVE": "integer",
    "PRIORTERM": "integer",
    "PWgt_R": "continuous",
    "RDMETH_REC": "categorical",
    "RESTATUS": "categorical",
    "RF_CESAR": "categorical",
    "RF_CESARN": "integer",
    "SEX": "categorical",
    "WTGAIN": "continuous",
}

MISSING_CODE = {
    "ATTEND": "9",
    "BFACIL": "9",
    "BMI": 99.9,
    "CIG_0": 99,
    "DLMP_MM": 99,
    "DMAR": " ",
    "DOB_MM": None,
    "DOB_TT": 9999,
    "DOB_WK": None,
    "FAGECOMB": 99,
    "FEDUC": "9",
    "ILLB_R": 999,
    "ILOP_R": [888, 999],
    "ILP_R": 999,
    "LD_INDL": None,
    "MAGER": None,
    "MBSTATE_REC": "3",
    "MEDUC": "9",
    "M_Ht_In": 99,
    "NO_INFEC": "9",
    "NO_MMORB": "9",
    "NO_RISKS": "9",
    "PAY": "9",
    "PAY_REC": "9",
    "PRECARE": 99,
    "PREVIS": 99,
    "PRIORDEAD": 99,
    "PRIORLIVE": 99,
    "PRIORTERM": 99,
    "PWgt_R": 999,
    "RDMETH_REC": "9",
    "RESTATUS": None,
    "RF_CESAR": "U",
    "RF_CESARN": 99,
    "SEX": None,
    "WTGAIN": 99,
}

# percentiles, used for the categorical neural network
BIN_LABELS = np.array(
    [
        227.0,
        700.0,
        1250.0,
        1750.0,
        2005.0,
        2155.0,
        2270.0,
        2360.0,
        2430.0,
        2495.0,
        2545.0,
        2580.0,
        2627.0,
        2665.0,
        2693.0,
        2722.0,
        2750.0,
        2778.0,
        2806.0,
        2830.0,
        2850.0,
        2868.0,
        2892.0,
        2913.0,
        2925.0,
        2948.0,
        2965.0,
        2977.0,
        3000.0,
        3010.0,
        3030.0,
        3040.0,
        3060.0,
        3070.0,
        3090.0,
        3095.0,
        3117.0,
        3120.0,
        3140.0,
        3150.0,
        3170.0,
        3175.0,
        3190.0,
        3204.0,
        3215.0,
        3231.0,
        3240.0,
        3258.0,
        3260.0,
        3280.0,
        3289.0,
        3300.0,
        3316.0,
        3320.0,
        3340.0,
        3345.0,
        3360.0,
        3374.0,
        3380.0,
        3400.0,
        3405.0,
        3420.0,
        3430.0,
        3446.0,
        3459.0,
        3470.0,
        3487.0,
        3495.0,
        3515.0,
        3520.0,
        3540.0,
        3550.0,
        3570.0,
        3575.0,
        3600.0,
        3609.0,
        3629.0,
        3640.0,
        3657.0,
        3675.0,
        3690.0,
        3711.0,
        3725.0,
        3742.0,
        3770.0,
        3785.0,
        3800.0,
        3827.0,
        3850.0,
        3875.0,
        3900.0,
        3930.0,
        3960.0,
        3991.52,
        4026.0,
        4070.0,
        4115.0,
        4170.0,
        4250.0,
        4338.0,
        4495.0,
        5000.0,
        6000.0,
    ]
)
